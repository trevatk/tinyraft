// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: protos/raft/v1/raft_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cmd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cmd) Reset() {
	*x = Cmd{}
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd) ProtoMessage() {}

func (x *Cmd) ProtoReflect() protoreflect.Message {
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd.ProtoReflect.Descriptor instead.
func (*Cmd) Descriptor() ([]byte, []int) {
	return file_protos_raft_v1_raft_service_proto_rawDescGZIP(), []int{0}
}

func (x *Cmd) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint64                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Term          uint64                 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Cmd           []byte                 `protobuf:"bytes,3,opt,name=cmd,proto3" json:"cmd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_protos_raft_v1_raft_service_proto_rawDescGZIP(), []int{1}
}

func (x *LogEntry) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *LogEntry) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetCmd() []byte {
	if x != nil {
		return x.Cmd
	}
	return nil
}

type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AdvertiseAddr string                 `protobuf:"bytes,1,opt,name=advertise_addr,json=advertiseAddr,proto3" json:"advertise_addr,omitempty"`
	Voter         bool                   `protobuf:"varint,2,opt,name=voter,proto3" json:"voter,omitempty"`
	CommitIndex   uint64                 `protobuf:"varint,3,opt,name=commit_index,json=commitIndex,proto3" json:"commit_index,omitempty"`
	RequestedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_protos_raft_v1_raft_service_proto_rawDescGZIP(), []int{2}
}

func (x *JoinRequest) GetAdvertiseAddr() string {
	if x != nil {
		return x.AdvertiseAddr
	}
	return ""
}

func (x *JoinRequest) GetVoter() bool {
	if x != nil {
		return x.Voter
	}
	return false
}

func (x *JoinRequest) GetCommitIndex() uint64 {
	if x != nil {
		return x.CommitIndex
	}
	return 0
}

func (x *JoinRequest) GetRequestedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedAt
	}
	return nil
}

type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssignedId    string                 `protobuf:"bytes,1,opt,name=assigned_id,json=assignedId,proto3" json:"assigned_id,omitempty"`
	LeaderId      string                 `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	Term          uint64                 `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_protos_raft_v1_raft_service_proto_rawDescGZIP(), []int{3}
}

func (x *JoinResponse) GetAssignedId() string {
	if x != nil {
		return x.AssignedId
	}
	return ""
}

func (x *JoinResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *JoinResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *JoinResponse) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type AppendEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId      string                 `protobuf:"bytes,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	PrevLogIndex  uint64                 `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"`
	PrevLogTerm   uint64                 `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	LogEntries    []*LogEntry            `protobuf:"bytes,5,rep,name=log_entries,json=logEntries,proto3" json:"log_entries,omitempty"`
	LeaderCommit  uint64                 `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	RequestedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesRequest) Reset() {
	*x = AppendEntriesRequest{}
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesRequest) ProtoMessage() {}

func (x *AppendEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesRequest.ProtoReflect.Descriptor instead.
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return file_protos_raft_v1_raft_service_proto_rawDescGZIP(), []int{4}
}

func (x *AppendEntriesRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *AppendEntriesRequest) GetPrevLogIndex() uint64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntriesRequest) GetPrevLogTerm() uint64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesRequest) GetLogEntries() []*LogEntry {
	if x != nil {
		return x.LogEntries
	}
	return nil
}

func (x *AppendEntriesRequest) GetLeaderCommit() uint64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

func (x *AppendEntriesRequest) GetRequestedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedAt
	}
	return nil
}

type AppendEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesResponse) Reset() {
	*x = AppendEntriesResponse{}
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesResponse) ProtoMessage() {}

func (x *AppendEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesResponse.ProtoReflect.Descriptor instead.
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return file_protos_raft_v1_raft_service_proto_rawDescGZIP(), []int{5}
}

func (x *AppendEntriesResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type VoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_protos_raft_v1_raft_service_proto_rawDescGZIP(), []int{6}
}

func (x *VoteRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

type VoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,2,opt,name=vote_granted,json=voteGranted,proto3" json:"vote_granted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_raft_v1_raft_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_protos_raft_v1_raft_service_proto_rawDescGZIP(), []int{7}
}

func (x *VoteResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteResponse) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

var File_protos_raft_v1_raft_service_proto protoreflect.FileDescriptor

const file_protos_raft_v1_raft_service_proto_rawDesc = "" +
	"\n" +
	"!protos/raft/v1/raft_service.proto\x12\x0ftrevatk.raft.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x1f\n" +
	"\x03Cmd\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\"F\n" +
	"\bLogEntry\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x04R\x05index\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term\x12\x10\n" +
	"\x03cmd\x18\x03 \x01(\fR\x03cmd\"\xac\x01\n" +
	"\vJoinRequest\x12%\n" +
	"\x0eadvertise_addr\x18\x01 \x01(\tR\radvertiseAddr\x12\x14\n" +
	"\x05voter\x18\x02 \x01(\bR\x05voter\x12!\n" +
	"\fcommit_index\x18\x03 \x01(\x04R\vcommitIndex\x12=\n" +
	"\frequested_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vrequestedAt\"\x9f\x01\n" +
	"\fJoinResponse\x12\x1f\n" +
	"\vassigned_id\x18\x01 \x01(\tR\n" +
	"assignedId\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\tR\bleaderId\x12\x12\n" +
	"\x04term\x18\x03 \x01(\x04R\x04term\x12=\n" +
	"\fcompleted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"\xb1\x02\n" +
	"\x14AppendEntriesRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\tR\bleaderId\x12$\n" +
	"\x0eprev_log_index\x18\x03 \x01(\x04R\fprevLogIndex\x12\"\n" +
	"\rprev_log_term\x18\x04 \x01(\x04R\vprevLogTerm\x12:\n" +
	"\vlog_entries\x18\x05 \x03(\v2\x19.trevatk.raft.v1.LogEntryR\n" +
	"logEntries\x12#\n" +
	"\rleader_commit\x18\x06 \x01(\x04R\fleaderCommit\x12=\n" +
	"\frequested_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vrequestedAt\"E\n" +
	"\x15AppendEntriesResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"!\n" +
	"\vVoteRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\"E\n" +
	"\fVoteResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12!\n" +
	"\fvote_granted\x18\x02 \x01(\bR\vvoteGranted2\xb8\x02\n" +
	"\rRaftServiceV1\x127\n" +
	"\x05Apply\x12\x14.trevatk.raft.v1.Cmd\x1a\x16.google.protobuf.Empty\"\x00\x12E\n" +
	"\x04Join\x12\x1c.trevatk.raft.v1.JoinRequest\x1a\x1d.trevatk.raft.v1.JoinResponse\"\x00\x12`\n" +
	"\rAppendEntries\x12%.trevatk.raft.v1.AppendEntriesRequest\x1a&.trevatk.raft.v1.AppendEntriesResponse\"\x00\x12E\n" +
	"\x04Vote\x12\x1c.trevatk.raft.v1.VoteRequest\x1a\x1d.trevatk.raft.v1.VoteResponse\"\x00B$Z\"github.com/trevatk/raft/pb/raft/v1b\x06proto3"

var (
	file_protos_raft_v1_raft_service_proto_rawDescOnce sync.Once
	file_protos_raft_v1_raft_service_proto_rawDescData []byte
)

func file_protos_raft_v1_raft_service_proto_rawDescGZIP() []byte {
	file_protos_raft_v1_raft_service_proto_rawDescOnce.Do(func() {
		file_protos_raft_v1_raft_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_raft_v1_raft_service_proto_rawDesc), len(file_protos_raft_v1_raft_service_proto_rawDesc)))
	})
	return file_protos_raft_v1_raft_service_proto_rawDescData
}

var file_protos_raft_v1_raft_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protos_raft_v1_raft_service_proto_goTypes = []any{
	(*Cmd)(nil),                   // 0: trevatk.raft.v1.Cmd
	(*LogEntry)(nil),              // 1: trevatk.raft.v1.LogEntry
	(*JoinRequest)(nil),           // 2: trevatk.raft.v1.JoinRequest
	(*JoinResponse)(nil),          // 3: trevatk.raft.v1.JoinResponse
	(*AppendEntriesRequest)(nil),  // 4: trevatk.raft.v1.AppendEntriesRequest
	(*AppendEntriesResponse)(nil), // 5: trevatk.raft.v1.AppendEntriesResponse
	(*VoteRequest)(nil),           // 6: trevatk.raft.v1.VoteRequest
	(*VoteResponse)(nil),          // 7: trevatk.raft.v1.VoteResponse
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 9: google.protobuf.Empty
}
var file_protos_raft_v1_raft_service_proto_depIdxs = []int32{
	8, // 0: trevatk.raft.v1.JoinRequest.requested_at:type_name -> google.protobuf.Timestamp
	8, // 1: trevatk.raft.v1.JoinResponse.completed_at:type_name -> google.protobuf.Timestamp
	1, // 2: trevatk.raft.v1.AppendEntriesRequest.log_entries:type_name -> trevatk.raft.v1.LogEntry
	8, // 3: trevatk.raft.v1.AppendEntriesRequest.requested_at:type_name -> google.protobuf.Timestamp
	0, // 4: trevatk.raft.v1.RaftServiceV1.Apply:input_type -> trevatk.raft.v1.Cmd
	2, // 5: trevatk.raft.v1.RaftServiceV1.Join:input_type -> trevatk.raft.v1.JoinRequest
	4, // 6: trevatk.raft.v1.RaftServiceV1.AppendEntries:input_type -> trevatk.raft.v1.AppendEntriesRequest
	6, // 7: trevatk.raft.v1.RaftServiceV1.Vote:input_type -> trevatk.raft.v1.VoteRequest
	9, // 8: trevatk.raft.v1.RaftServiceV1.Apply:output_type -> google.protobuf.Empty
	3, // 9: trevatk.raft.v1.RaftServiceV1.Join:output_type -> trevatk.raft.v1.JoinResponse
	5, // 10: trevatk.raft.v1.RaftServiceV1.AppendEntries:output_type -> trevatk.raft.v1.AppendEntriesResponse
	7, // 11: trevatk.raft.v1.RaftServiceV1.Vote:output_type -> trevatk.raft.v1.VoteResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_protos_raft_v1_raft_service_proto_init() }
func file_protos_raft_v1_raft_service_proto_init() {
	if File_protos_raft_v1_raft_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_raft_v1_raft_service_proto_rawDesc), len(file_protos_raft_v1_raft_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_raft_v1_raft_service_proto_goTypes,
		DependencyIndexes: file_protos_raft_v1_raft_service_proto_depIdxs,
		MessageInfos:      file_protos_raft_v1_raft_service_proto_msgTypes,
	}.Build()
	File_protos_raft_v1_raft_service_proto = out.File
	file_protos_raft_v1_raft_service_proto_goTypes = nil
	file_protos_raft_v1_raft_service_proto_depIdxs = nil
}
